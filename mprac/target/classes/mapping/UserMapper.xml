<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dao.UserMapper">
  <resultMap id="BaseResultMap" type="model.User">
    <result column="UserName" jdbcType="VARCHAR" property="username" />
    <result column="Password" jdbcType="VARCHAR" property="password" />
    <result column="Id" jdbcType="INTEGER" property="id" />
    <result column="Age" jdbcType="INTEGER" property="age" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    UserName, Password, Id, Age
  </sql>
  <select id="selectByExample" parameterType="model.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user_info_t
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="model.UserExample">
    delete from user_info_t
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="model.User">
    insert into user_info_t (UserName, Password, Id, 
      Age)
    values (#{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{id,jdbcType=INTEGER}, 
      #{age,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="model.User">
    insert into user_info_t
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="username != null">
        UserName,
      </if>
      <if test="password != null">
        Password,
      </if>
      <if test="id != null">
        Id,
      </if>
      <if test="age != null">
        Age,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="age != null">
        #{age,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="model.UserExample" resultType="java.lang.Long">
    select count(*) from user_info_t
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user_info_t
    <set>
      <if test="record.username != null">
        UserName = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        Password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.id != null">
        Id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.age != null">
        Age = #{record.age,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user_info_t
    set UserName = #{record.username,jdbcType=VARCHAR},
      Password = #{record.password,jdbcType=VARCHAR},
      Id = #{record.id,jdbcType=INTEGER},
      Age = #{record.age,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <resultMap id="BaseResultMap" type="model.User">
    <result column="UserName" jdbcType="VARCHAR" property="username" />
    <result column="Password" jdbcType="VARCHAR" property="password" />
    <result column="Id" jdbcType="BIGINT" property="id" />
    <result column="Age" jdbcType="BIGINT" property="age" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    UserName, Password, Id, Age
  </sql>
  <select id="selectByExample" parameterType="model.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user_info_t
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="model.UserExample">
    delete from user_info_t
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="model.User">
    insert into user_info_t (UserName, Password, Id, 
      Age)
    values (#{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{id,jdbcType=BIGINT}, 
      #{age,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="model.User">
    insert into user_info_t
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="username != null">
        UserName,
      </if>
      <if test="password != null">
        Password,
      </if>
      <if test="id != null">
        Id,
      </if>
      <if test="age != null">
        Age,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="age != null">
        #{age,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="model.UserExample" resultType="java.lang.Long">
    select count(*) from user_info_t
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user_info_t
    <set>
      <if test="record.username != null">
        UserName = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        Password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.id != null">
        Id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.age != null">
        Age = #{record.age,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user_info_t
    set UserName = #{record.username,jdbcType=VARCHAR},
      Password = #{record.password,jdbcType=VARCHAR},
      Id = #{record.id,jdbcType=BIGINT},
      Age = #{record.age,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <resultMap id="BaseResultMap" type="model.User">
    <result column="UserName" jdbcType="VARCHAR" property="username" />
    <result column="Password" jdbcType="VARCHAR" property="password" />
    <result column="Id" jdbcType="VARCHAR" property="id" />
    <result column="setAge" jdbcType="VARCHAR" property="setage" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    UserName, Password, Id, setAge
  </sql>
  <select id="selectByExample" parameterType="model.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user_info_t
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="model.UserExample">
    delete from user_info_t
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="model.User">
    insert into user_info_t (UserName, Password, Id, 
      setAge)
    values (#{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{id,jdbcType=VARCHAR}, 
      #{setage,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="model.User">
    insert into user_info_t
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="username != null">
        UserName,
      </if>
      <if test="password != null">
        Password,
      </if>
      <if test="id != null">
        Id,
      </if>
      <if test="setage != null">
        setAge,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="setage != null">
        #{setage,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="model.UserExample" resultType="java.lang.Long">
    select count(*) from user_info_t
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user_info_t
    <set>
      <if test="record.username != null">
        UserName = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        Password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.id != null">
        Id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.setage != null">
        setAge = #{record.setage,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user_info_t
    set UserName = #{record.username,jdbcType=VARCHAR},
      Password = #{record.password,jdbcType=VARCHAR},
      Id = #{record.id,jdbcType=VARCHAR},
      setAge = #{record.setage,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <resultMap id="BaseResultMap" type="model.User">
    <result column="User" jdbcType="VARCHAR" property="user" />
    <result column="ID" jdbcType="BIGINT" property="id" />
    <result column="IS_COMPILED" jdbcType="VARCHAR" property="isCompiled" />
    <result column="SORTLEN" jdbcType="BIGINT" property="sortlen" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    User, ID, IS_COMPILED, SORTLEN
  </sql>
  <select id="selectByExample" parameterType="model.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user_info_t
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="model.UserExample">
    delete from user_info_t
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="model.User">
    insert into user_info_t (User, ID, IS_COMPILED, 
      SORTLEN)
    values (#{user,jdbcType=VARCHAR}, #{id,jdbcType=BIGINT}, #{isCompiled,jdbcType=VARCHAR}, 
      #{sortlen,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="model.User">
    insert into user_info_t
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="user != null">
        User,
      </if>
      <if test="id != null">
        ID,
      </if>
      <if test="isCompiled != null">
        IS_COMPILED,
      </if>
      <if test="sortlen != null">
        SORTLEN,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="user != null">
        #{user,jdbcType=VARCHAR},
      </if>
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="isCompiled != null">
        #{isCompiled,jdbcType=VARCHAR},
      </if>
      <if test="sortlen != null">
        #{sortlen,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="model.UserExample" resultType="java.lang.Long">
    select count(*) from user_info_t
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user_info_t
    <set>
      <if test="record.user != null">
        User = #{record.user,jdbcType=VARCHAR},
      </if>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.isCompiled != null">
        IS_COMPILED = #{record.isCompiled,jdbcType=VARCHAR},
      </if>
      <if test="record.sortlen != null">
        SORTLEN = #{record.sortlen,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user_info_t
    set User = #{record.user,jdbcType=VARCHAR},
      ID = #{record.id,jdbcType=BIGINT},
      IS_COMPILED = #{record.isCompiled,jdbcType=VARCHAR},
      SORTLEN = #{record.sortlen,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>